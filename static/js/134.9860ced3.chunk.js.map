{"version":3,"file":"static/js/134.9860ced3.chunk.js","mappings":"wNAsDA,UAjDe,WAAO,IAAD,EACnB,GAAmCA,EAAAA,EAAAA,MAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAElB,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,MAgBjB,OARAC,EAAAA,EAAAA,YAAU,WACM,KAAVJ,GAEJK,EAAAA,GAA2BL,GAAOM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACxCX,EAAUW,EACX,GACF,GAAE,CAACP,KAGF,4BACE,kBAAMQ,SAAUf,GAhBM,SAAC,EAAWgB,GAAS,IAAlBT,EAAiB,EAAjBA,MAC3BD,EAAgB,CAAEC,MAAOA,IAEzBS,EAAIC,OAAOC,OACZ,IAYG,WACE,kCACEC,KAAK,QACDpB,EAAS,UAFf,IAIEqB,WAAS,EACTC,YAAY,mBAEd,mBAAQF,KAAK,SAAb,uBAEDjB,IACC,wBACGA,EAAOoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMlB,GAAlC,SACGe,KAFID,EADC,QAWrB,C,+LClDDK,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAUHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,GAAW,CACxEE,OAAQ,CAAEC,SAAU,WAFS,uBACvBC,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAQjBC,EAAe,mCAAG,WAAM3B,GAAN,yFACNqB,EAAAA,EAAAA,IAAA,4DACgCC,GACrD,CACEE,OAAQ,CACNxB,MAAM,GAAD,OAAKA,GACV4B,cAAe,QACfH,SAAU,QACVI,KAAM,OARiB,uBACrBH,EADqB,EACrBA,KADqB,kBAatBA,GAbsB,2CAAH,sDAgBfI,EAAe,mCAAG,WAAMC,GAAN,yFACNV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,oBAAsCT,GAAW,CACtEE,OAAQ,CAAEC,SAAU,WAFO,uBACrBC,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfM,EAAY,mCAAG,WAAMD,GAAN,yFACHV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeT,IAFZ,uBAClBI,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZO,EAAc,mCAAG,WAAMF,GAAN,yFACLV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeT,GACpC,CAAEE,OAAQ,CAAEC,SAAU,QAASI,KAAM,OAHX,uBACpBH,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,qD","sources":["pages/Movies.jsx","servises/Api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport * as ApiServise from '../servises/Api';\n\nconst Movies = () => {\n  const { register, handleSubmit } = useForm();\n  // const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const handleSearchMovie = ({ query }, evt) => {\n    setSearchParams({ query: query });\n\n    evt.target.reset();\n  };\n\n  useEffect(() => {\n    if (query === '') return;\n\n    ApiServise.getSearchMovies(query).then(({ results }) => {\n      setMovies(results);\n    });\n  }, [query]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(handleSearchMovie)}>\n        <input\n          type=\"text\"\n          {...register('query')}\n          // onChange={evt => setSearchParams({ query: evt.target.value })}\n          autoFocus\n          placeholder=\"Search films\"\n        />\n        <button type=\"submit\">search</button>\n      </form>\n      {movies && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd9390daba6ebc6ed6dca3d5ccaa12bef';\n\n// export const getImages = async () => {\n//   const { data } = await axios.get(\n//     '/3/configuration?api_key=30415d4ffaf02abf587087795c9f4358'\n//   );\n\n//   return data;\n// };\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`, {\n    params: { language: 'en-US' },\n  });\n\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}`,\n    {\n      params: {\n        query: `${query}`,\n        include_adult: 'false',\n        language: 'en-US',\n        page: '1',\n      },\n    }\n  );\n\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`, {\n    params: { language: 'en-US' },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getReviewMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`,\n    { params: { language: 'en-US', page: '1' } }\n  );\n  return data;\n};\n\n// export const getTrendingMovies = async () => {\n//   const { data } = await axios.request(\n//     'https://api.themoviedb.org/3/trending/movie/day',\n//     options\n//   );\n\n//   return data;\n// };\n\n// export const getMovieDetails = async movieId => {\n//   const { data } = await axios.request(\n//     `https://api.themoviedb.org/3/movie/${movieId}`,\n//     options\n//   );\n\n//   return data;\n// };\n\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.themoviedb.org/3/movie/movie_id',\n//   params: {language: 'en-US'},\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzMDQxNWQ0ZmZhZjAyYWJmNTg3MDg3Nzk1YzlmNDM1OCIsInN1YiI6IjY0NmI0ZGJmMmJjZjY3MDExYmY0NTc3NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.PZEMQTvbZ4N5DdoHgmjy5jv9wXM9Ll_N7E5IJX4SsU0'\n//   }\n// };\n\n// axios\n//   .request(options)\n//   .then(function (response) {\n//     console.log(response.data);\n//   })\n//   .catch(function (error) {\n//     console.error(error);\n//   });\n"],"names":["useForm","register","handleSubmit","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","ApiServise","then","results","onSubmit","evt","target","reset","type","autoFocus","placeholder","map","id","title","to","state","from","axios","API_KEY","getTrendingMovies","params","language","data","getSearchMovies","include_adult","page","getMovieDetails","movieId","getMovieCast","getReviewMovie"],"sourceRoot":""}