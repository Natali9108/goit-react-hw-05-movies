{"version":3,"file":"static/js/884.6f60e73a.chunk.js","mappings":"+MAoEA,UA9DqB,WAAO,IAAD,EACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,UAACH,EAASI,aAAV,aAAC,EAAgBC,MAQnD,IANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA2BZ,GACxBa,MAAK,SAAAV,GAAK,OAAIC,EAASD,EAAb,IACVW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACf,IAECG,EAIL,OACE,4BACE,UAAC,KAAD,CAAMe,GAAIX,EAAoBY,QAA9B,WACE,SAAC,MAAD,IADF,cAKA,gBACEC,IAAG,0CAAqCjB,EAAMkB,aAC9CC,IAAKnB,EAAMoB,SAEb,0BACGpB,EAAMoB,MADT,KACkBpB,EAAMqB,aAAaC,MAAM,EAAG,GAD9C,QAGA,2BACE,yBACE,wCAAqC,GAArBtB,EAAMuB,aAAtB,UAEF,yBACE,wBACE,wCAAgBvB,EAAMwB,iBAG1B,2BACE,uCACA,uBAAIxB,EAAMyB,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,eAG7C,4BACE,kDACA,2BACE,yBACE,SAAC,KAAD,CAAMd,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAe,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,+LChEDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAUHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,GAAW,CACxEE,OAAQ,CAAEC,SAAU,WAFS,uBACvBC,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAQjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,4DACgCC,GACrD,CACEE,OAAQ,CACNI,MAAM,GAAD,OAAKA,GACVC,cAAe,QACfJ,SAAU,QACVK,KAAM,OARiB,uBACrBJ,EADqB,EACrBA,KADqB,kBAatBA,GAbsB,2CAAH,sDAgBfK,EAAe,mCAAG,WAAM7C,GAAN,yFACNmC,EAAAA,EAAAA,IAAA,gBAAmBnC,EAAnB,oBAAsCoC,GAAW,CACtEE,OAAQ,CAAEC,SAAU,WAFO,uBACrBC,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfM,EAAY,mCAAG,WAAM9C,GAAN,yFACHmC,EAAAA,EAAAA,IAAA,gBACZnC,EADY,4BACeoC,IAFZ,uBAClBI,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZO,EAAc,mCAAG,WAAM/C,GAAN,yFACLmC,EAAAA,EAAAA,IAAA,gBACZnC,EADY,4BACeoC,GACpC,CAAEE,OAAQ,CAAEC,SAAU,QAASK,KAAM,OAHX,uBACpBJ,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,qD","sources":["pages/MovieDetails.jsx","servises/Api.jsx"],"sourcesContent":["import { Suspense } from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport * as ApiServise from '../servises/Api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const baskLinkLocationRef = useRef(location.state?.from);\n\n  useEffect(() => {\n    ApiServise.getMovieDetails(movieId)\n      .then(movie => setMovie(movie))\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <div>\n      <Link to={baskLinkLocationRef.current}>\n        <HiArrowNarrowLeft />\n        Go Back\n      </Link>\n\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <h2>\n        {movie.title} ({movie.release_date.slice(0, 4)})\n      </h2>\n      <ul>\n        <li>\n          <p>User Score: {movie.vote_average * 10}%</p>\n        </li>\n        <li>\n          <p>\n            <span>Overview {movie.overview}</span>\n          </p>\n        </li>\n        <li>\n          <span>Genres </span>\n          <p>{movie.genres.map(el => el.name).join('  ')}</p>\n        </li>\n      </ul>\n      <div>\n        <p>Aditional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd9390daba6ebc6ed6dca3d5ccaa12bef';\n\n// export const getImages = async () => {\n//   const { data } = await axios.get(\n//     '/3/configuration?api_key=30415d4ffaf02abf587087795c9f4358'\n//   );\n\n//   return data;\n// };\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`, {\n    params: { language: 'en-US' },\n  });\n\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}`,\n    {\n      params: {\n        query: `${query}`,\n        include_adult: 'false',\n        language: 'en-US',\n        page: '1',\n      },\n    }\n  );\n\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`, {\n    params: { language: 'en-US' },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getReviewMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`,\n    { params: { language: 'en-US', page: '1' } }\n  );\n  return data;\n};\n\n// export const getTrendingMovies = async () => {\n//   const { data } = await axios.request(\n//     'https://api.themoviedb.org/3/trending/movie/day',\n//     options\n//   );\n\n//   return data;\n// };\n\n// export const getMovieDetails = async movieId => {\n//   const { data } = await axios.request(\n//     `https://api.themoviedb.org/3/movie/${movieId}`,\n//     options\n//   );\n\n//   return data;\n// };\n\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.themoviedb.org/3/movie/movie_id',\n//   params: {language: 'en-US'},\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzMDQxNWQ0ZmZhZjAyYWJmNTg3MDg3Nzk1YzlmNDM1OCIsInN1YiI6IjY0NmI0ZGJmMmJjZjY3MDExYmY0NTc3NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.PZEMQTvbZ4N5DdoHgmjy5jv9wXM9Ll_N7E5IJX4SsU0'\n//   }\n// };\n\n// axios\n//   .request(options)\n//   .then(function (response) {\n//     console.log(response.data);\n//   })\n//   .catch(function (error) {\n//     console.error(error);\n//   });\n"],"names":["movieId","useParams","useState","movie","setMovie","location","useLocation","baskLinkLocationRef","useRef","state","from","useEffect","ApiServise","then","catch","err","console","error","to","current","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","el","name","join","Suspense","fallback","axios","API_KEY","getTrendingMovies","params","language","data","getSearchMovies","query","include_adult","page","getMovieDetails","getMovieCast","getReviewMovie"],"sourceRoot":""}