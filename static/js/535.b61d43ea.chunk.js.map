{"version":3,"file":"static/js/535.b61d43ea.chunk.js","mappings":"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","sources":["components/MoviesItem/MoviesItem.jsx","components/MovieDetailsList/MovieDetailsList.styled.jsx","components/MovieDetailsList/MovieDetailsList.jsx","components/MovieForm/MovieForm.jsx","components/Message/Message.jsx","pages/Movies.jsx","servises/Api.jsx","utils/constans.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesItem = ({ title, path, state }) => {\n  return (\n    <li>\n      <Link to={path} state={state}>\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nMoviesItem.propTypes = {\n  title: PropTypes.string,\n  path: PropTypes.string.isRequired,\n  state: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const MovieImg = styled.img`\n  max-height: 400px;\n  max-width: 300px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieURL } from 'utils';\nimport defaultMovieimg from '../../img/movie.jpg';\nimport { MovieImg } from './MovieDetailsList.styled';\n\nexport const MovieDetailsList = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <div>\n      <MovieImg\n        src={poster_path ? `${MovieURL}${poster_path}` : defaultMovieimg}\n        alt={title}\n      />\n      <h2>\n        {title} ({release_date.slice(0, 4)})\n      </h2>\n      <ul>\n        <li>\n          <p>User Score: {(vote_average * 10).toFixed(1)}%</p>\n        </li>\n        <li>\n          <p>\n            <span>Overview {overview}</span>\n          </p>\n        </li>\n        <li>\n          <span>Genres </span>\n          <p>{genres.map(el => el.name).join('  ')}</p>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nMovieDetailsList.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.object),\n  }),\n};\n","import { useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport const MovieForm = ({ onSubmit }) => {\n  const { register, handleSubmit } = useForm();\n\n  const handleSearch = ({ query }, evt) => {\n    if (query === '') {\n      toast.warn('Please, write something to find movies', {\n        autoClose: 2000,\n      });\n    }\n    onSubmit(query);\n\n    evt.target.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(handleSearch)}>\n        <input\n          type=\"text\"\n          {...register('query')}\n          autoFocus\n          placeholder=\"Search films\"\n        />\n        <button type=\"submit\">search</button>\n      </form>\n    </>\n  );\n};\n\nMovieForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const Message = ({ text }) => {\n  return (\n    <>\n      <p>{text}</p>\n    </>\n  );\n};\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as ApiServise from '../servises/Api';\nimport { MovieForm, Loader, Message, MoviesItem } from 'components';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isEmpty, setIsEmpty] = useState(false);\n  const location = useLocation();\n\n  const handleSearchMovie = query => {\n    setSearchParams({ query: query });\n    setIsEmpty(false);\n    setError('');\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      setMovies(null);\n      return;\n    }\n\n    setIsLoading(true);\n    ApiServise.getSearchMovies(query)\n      .then(({ results }) => {\n        if (!results.length) {\n          setIsEmpty(true);\n        }\n\n        setMovies(results);\n      })\n      .catch(error => setError(error.message))\n      .finally(() => setIsLoading(false));\n  }, [query]);\n\n  return (\n    <div>\n      <MovieForm onSubmit={handleSearchMovie} />\n      {error && <Message text={error} />}\n      {isEmpty && <Message text={`For ${query} no movies found ðŸ˜¢`} />}\n      {movies && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <MoviesItem\n              key={id}\n              title={title}\n              path={`${id}`}\n              state={{ from: location }}\n            />\n          ))}\n        </ul>\n      )}\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  id: PropTypes.string,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd9390daba6ebc6ed6dca3d5ccaa12bef';\n\n// export const getImages = async () => {\n//   const { data } = await axios.get(\n//     '/3/configuration?api_key=30415d4ffaf02abf587087795c9f4358'\n//   );\n\n//   return data;\n// };\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`, {\n    params: { language: 'en-US' },\n  });\n\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}`,\n    {\n      params: {\n        query: `${query}`,\n        include_adult: 'false',\n        language: 'en-US',\n        page: '1',\n      },\n    }\n  );\n\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`, {\n    params: { language: 'en-US' },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getReviewMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`,\n    { params: { language: 'en-US', page: '1' } }\n  );\n  return data;\n};\n\n// export const getTrendingMovies = async () => {\n//   const { data } = await axios.request(\n//     'https://api.themoviedb.org/3/trending/movie/day',\n//     options\n//   );\n\n//   return data;\n// };\n\n// export const getMovieDetails = async movieId => {\n//   const { data } = await axios.request(\n//     `https://api.themoviedb.org/3/movie/${movieId}`,\n//     options\n//   );\n\n//   return data;\n// };\n\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.themoviedb.org/3/movie/movie_id',\n//   params: {language: 'en-US'},\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzMDQxNWQ0ZmZhZjAyYWJmNTg3MDg3Nzk1YzlmNDM1OCIsInN1YiI6IjY0NmI0ZGJmMmJjZjY3MDExYmY0NTc3NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.PZEMQTvbZ4N5DdoHgmjy5jv9wXM9Ll_N7E5IJX4SsU0'\n//   }\n// };\n\n// axios\n//   .request(options)\n//   .then(function (response) {\n//     console.log(response.data);\n//   })\n//   .catch(function (error) {\n//     console.error(error);\n//   });\n","export const MovieURL = 'https://image.tmdb.org/t/p/w500/';\nexport const castImgURL = 'https://image.tmdb.org/t/p/w300/';\n"],"names":["MoviesItem","title","path","state","to","MovieImg","styled","MovieDetailsList","movie","poster_path","release_date","vote_average","overview","genres","src","MovieURL","defaultMovieimg","alt","slice","toFixed","map","el","name","join","MovieForm","onSubmit","useForm","register","handleSubmit","evt","query","toast","autoClose","target","reset","type","autoFocus","placeholder","Message","text","useSearchParams","searchParams","setSearchParams","get","useState","movies","setMovies","isLoading","setIsLoading","error","setError","isEmpty","setIsEmpty","location","useLocation","useEffect","ApiServise","then","results","length","catch","message","finally","id","from","axios","API_KEY","getTrendingMovies","params","language","data","getSearchMovies","include_adult","page","getMovieDetails","movieId","getMovieCast","getReviewMovie","castImgURL"],"sourceRoot":""}