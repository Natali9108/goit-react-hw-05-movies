{"version":3,"file":"static/js/415.fb417836.chunk.js","mappings":"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","sources":["components/TrendingMovieList/TrendingMovieList.jsx","components/MovieDetailsList/MovieDetailsList.jsx","components/MovieForm/MovieForm.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","servises/Api.jsx","utils/constans.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const TrendingMovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <h1>Trending today</h1>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { MovieURL } from 'utils';\n\nexport const MovieDetailsList = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n  return (\n    <div>\n      <img src={`${MovieURL}${poster_path}`} alt={title} />\n      <h2>\n        {title} ({release_date.slice(0, 4)})\n      </h2>\n      <ul>\n        <li>\n          <p>User Score: {(vote_average * 10).toFixed(1)}%</p>\n        </li>\n        <li>\n          <p>\n            <span>Overview {overview}</span>\n          </p>\n        </li>\n        <li>\n          <span>Genres </span>\n          <p>{genres.map(el => el.name).join('  ')}</p>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useForm } from 'react-hook-form';\n\nexport const MovieForm = ({ onSubmit }) => {\n  const { register, handleSubmit } = useForm();\n\n  const handleSearch = ({ query }, evt) => {\n    // setSearchParams({ query: query });\n    onSubmit(query);\n\n    evt.target.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(handleSearch)}>\n        <input\n          type=\"text\"\n          {...register('query')}\n          autoFocus\n          placeholder=\"Search films\"\n        />\n        <button type=\"submit\">search</button>\n      </form>\n    </>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport * as ApiServise from '../servises/Api';\nimport { TrendingMovieList } from 'components';\n\nconst Home = () => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n\n  useEffect(() => {\n    ApiServise.getTrendingMovies()\n      .then(({ results }) => {\n        setTrendingFilms([...results]);\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  return (\n    <div>\n    \n      <TrendingMovieList movies={trendingFilms} />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd9390daba6ebc6ed6dca3d5ccaa12bef';\n\n// export const getImages = async () => {\n//   const { data } = await axios.get(\n//     '/3/configuration?api_key=30415d4ffaf02abf587087795c9f4358'\n//   );\n\n//   return data;\n// };\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`, {\n    params: { language: 'en-US' },\n  });\n\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}`,\n    {\n      params: {\n        query: `${query}`,\n        include_adult: 'false',\n        language: 'en-US',\n        page: '1',\n      },\n    }\n  );\n\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`, {\n    params: { language: 'en-US' },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getReviewMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`,\n    { params: { language: 'en-US', page: '1' } }\n  );\n  return data;\n};\n\n// export const getTrendingMovies = async () => {\n//   const { data } = await axios.request(\n//     'https://api.themoviedb.org/3/trending/movie/day',\n//     options\n//   );\n\n//   return data;\n// };\n\n// export const getMovieDetails = async movieId => {\n//   const { data } = await axios.request(\n//     `https://api.themoviedb.org/3/movie/${movieId}`,\n//     options\n//   );\n\n//   return data;\n// };\n\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.themoviedb.org/3/movie/movie_id',\n//   params: {language: 'en-US'},\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzMDQxNWQ0ZmZhZjAyYWJmNTg3MDg3Nzk1YzlmNDM1OCIsInN1YiI6IjY0NmI0ZGJmMmJjZjY3MDExYmY0NTc3NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.PZEMQTvbZ4N5DdoHgmjy5jv9wXM9Ll_N7E5IJX4SsU0'\n//   }\n// };\n\n// axios\n//   .request(options)\n//   .then(function (response) {\n//     console.log(response.data);\n//   })\n//   .catch(function (error) {\n//     console.error(error);\n//   });\n","export const MovieURL = 'https://image.tmdb.org/t/p/w500/';\nexport const castImgURL = 'https://image.tmdb.org/t/p/w300/';\n"],"names":["TrendingMovieList","movies","location","useLocation","map","id","title","to","state","from","MovieDetailsList","movie","poster_path","release_date","vote_average","overview","genres","src","MovieURL","alt","slice","toFixed","el","name","join","MovieForm","onSubmit","useForm","register","handleSubmit","evt","query","target","reset","type","autoFocus","placeholder","MoviesList","useState","trendingFilms","setTrendingFilms","useEffect","ApiServise","then","results","catch","err","console","error","axios","API_KEY","getTrendingMovies","params","language","data","getSearchMovies","include_adult","page","getMovieDetails","movieId","getMovieCast","getReviewMovie","castImgURL"],"sourceRoot":""}