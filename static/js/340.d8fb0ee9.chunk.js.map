{"version":3,"file":"static/js/340.d8fb0ee9.chunk.js","mappings":"mPAEaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,wBACGA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,0BAAI,WAASD,MACb,uBAAIC,MAFGF,EADE,KAQlB,ECeD,EAvBgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA0BL,GACvBM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPJ,GAAW,OAAII,GAChB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACT,KAGF,yBACsB,IAAnBL,EAAQiB,QACP,uBAAG,8CAEH,SAAClB,EAAD,CAAaC,QAASA,KAI7B,C,mMCxBDkB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAUHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,GAAW,CACxEE,OAAQ,CAAEC,SAAU,WAFS,uBACvBC,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAQjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,4DACgCC,GACrD,CACEE,OAAQ,CACNI,MAAM,GAAD,OAAKA,GACVC,cAAe,QACfJ,SAAU,QACVK,KAAM,OARiB,uBACrBJ,EADqB,EACrBA,KADqB,kBAatBA,GAbsB,2CAAH,sDAgBfK,EAAe,mCAAG,WAAMvB,GAAN,yFACNa,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,oBAAsCc,GAAW,CACtEE,OAAQ,CAAEC,SAAU,WAFO,uBACrBC,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfM,EAAY,mCAAG,WAAMxB,GAAN,yFACHa,EAAAA,EAAAA,IAAA,gBACZb,EADY,4BACec,IAFZ,uBAClBI,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZO,EAAc,mCAAG,WAAMzB,GAAN,yFACLa,EAAAA,EAAAA,IAAA,gBACZb,EADY,4BACec,GACpC,CAAEE,OAAQ,CAAEC,SAAU,QAASK,KAAM,OAHX,uBACpBJ,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,qD","sources":["components/Reviews/ReviewsList.jsx","components/Reviews/Reviews.jsx","servises/Api.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <h3>Author: {author}</h3>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as ApiServise from '../../servises/Api';\nimport { ReviewsList } from './ReviewsList';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    ApiServise.getReviewMovie(movieId)\n      .then(({ results }) => {\n        setReviews([...results]);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length === 0 ? (\n        <p>We don't hane ane reviews for this movie</p>\n      ) : (\n        <ReviewsList reviews={reviews} />\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd9390daba6ebc6ed6dca3d5ccaa12bef';\n\n// export const getImages = async () => {\n//   const { data } = await axios.get(\n//     '/3/configuration?api_key=30415d4ffaf02abf587087795c9f4358'\n//   );\n\n//   return data;\n// };\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`, {\n    params: { language: 'en-US' },\n  });\n\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}`,\n    {\n      params: {\n        query: `${query}`,\n        include_adult: 'false',\n        language: 'en-US',\n        page: '1',\n      },\n    }\n  );\n\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`, {\n    params: { language: 'en-US' },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getReviewMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`,\n    { params: { language: 'en-US', page: '1' } }\n  );\n  return data;\n};\n\n// export const getTrendingMovies = async () => {\n//   const { data } = await axios.request(\n//     'https://api.themoviedb.org/3/trending/movie/day',\n//     options\n//   );\n\n//   return data;\n// };\n\n// export const getMovieDetails = async movieId => {\n//   const { data } = await axios.request(\n//     `https://api.themoviedb.org/3/movie/${movieId}`,\n//     options\n//   );\n\n//   return data;\n// };\n\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.themoviedb.org/3/movie/movie_id',\n//   params: {language: 'en-US'},\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzMDQxNWQ0ZmZhZjAyYWJmNTg3MDg3Nzk1YzlmNDM1OCIsInN1YiI6IjY0NmI0ZGJmMmJjZjY3MDExYmY0NTc3NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.PZEMQTvbZ4N5DdoHgmjy5jv9wXM9Ll_N7E5IJX4SsU0'\n//   }\n// };\n\n// axios\n//   .request(options)\n//   .then(function (response) {\n//     console.log(response.data);\n//   })\n//   .catch(function (error) {\n//     console.error(error);\n//   });\n"],"names":["ReviewsList","reviews","map","id","author","content","movieId","useParams","useState","setReviews","useEffect","ApiServise","then","results","catch","error","console","log","length","axios","API_KEY","getTrendingMovies","params","language","data","getSearchMovies","query","include_adult","page","getMovieDetails","getMovieCast","getReviewMovie"],"sourceRoot":""}